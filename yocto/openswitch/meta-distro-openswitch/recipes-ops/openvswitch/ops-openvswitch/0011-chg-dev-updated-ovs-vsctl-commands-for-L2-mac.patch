From a6634a4e9dd297e84ecbadf2549394547be5a0d1 Mon Sep 17 00:00:00 2001
From: Harshvardhan <harshvardhan@hpe.com>
Date: Fri, 8 Jul 2016 17:00:58 -0700
Subject: [PATCH] ovs-vsctl l2mac command modification

1. MAC Table
   1.1	Setting vlan value for new column  mac_vlan
   1.2	Fetching vlan value form new column  mac_vlan

Tags: fix, dev
TG-1175

Change-Id: Ica3c8e0b98c4e93316ccac051cfdc4bb2cf30372
Signed-off-by: Harshvardhan <harshvardhan@hpe.com>
---
 utilities/ovs-vsctl.c | 142 +++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 141 insertions(+), 1 deletion(-)

diff --git a/utilities/ovs-vsctl.c b/utilities/ovs-vsctl.c
index d404b8f..960e9b2 100644
--- a/utilities/ovs-vsctl.c
+++ b/utilities/ovs-vsctl.c
@@ -446,7 +446,10 @@ VRF Port commands:\n\
   list-vrf-ports VRF          print the names of all the ports on VRF\n\
   add-vrf-port VRF PORT       add network device PORT to VRF\n\
   del-vrf-port [VRF] PORT     delete PORT from VRF\n\
-  port-to-vrf PORT            print name of vrf that contains PORT\n");
+  port-to-vrf PORT            print name of vrf that contains PORT\n\
+MAC commands:\n\
+  add-mac MAC VID PORT FROM   add mac with given details\n\
+  del-mac MAC VID PORT FROM   delete mac having given details\n");
 #endif
     vlog_usage();
     printf("\
@@ -1978,6 +1981,32 @@ pre_get_vlan_info(struct ctl_context *ctx)
 }
 
 static void
+pre_get_mac_info(struct ctl_context *ctx)
+{
+
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_system_col_bridges);
+    ovsdb_idl_add_table(ctx->idl, &ovsrec_table_bridge);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_bridge_col_name);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_bridge_col_ports);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_bridge_col_vlans);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_port_col_name);
+
+    ovsdb_idl_add_table(ctx->idl, &ovsrec_table_mac);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_bridge);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_mac_addr);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_tunnel_key);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_vlan);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_mac_vlan);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_port);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_from);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_mac_col_status);
+
+    ovsdb_idl_add_table(ctx->idl, &ovsrec_table_vlan);
+    ovsdb_idl_add_column(ctx->idl, &ovsrec_vlan_col_id);
+
+}
+
+static void
 bridge_insert_vlan(struct ovsrec_bridge *br, struct ovsrec_vlan *vlan)
 {
     struct ovsrec_vlan **vlans;
@@ -2134,6 +2163,113 @@ cmd_del_vlan(struct ctl_context *ctx)
 }
 
 static void
+cmd_add_mac(struct ctl_context *ctx)
+{
+    struct vsctl_context *vsctl_ctx = vsctl_context_cast(ctx);
+    int i, vid;
+    char *br_name = "bridge_normal";
+    char *mac_addr;
+    char *port_name;
+    char *from;
+    struct vsctl_bridge *bridge = NULL;
+    struct ovsrec_mac *mac = NULL;
+    const struct ovsrec_port *port_cfg = NULL;
+    struct ovsrec_vlan *vlan_row = NULL;
+
+    mac_addr = ctx->argv[1];
+    vid = atoi(ctx->argv[2]);
+    port_name = ctx->argv[3];
+    from = ctx->argv[4];
+
+    vsctl_context_populate_cache(ctx);
+
+    bridge = find_bridge(vsctl_ctx, br_name, true);
+    if(!bridge) {
+       ds_put_format(&ctx->output, "no bridge\n");
+       return;
+    }
+
+    for (i=0; i < bridge->br_cfg->n_ports; i++) {
+        if (strcmp(port_name, bridge->br_cfg->ports[i]->name) == 0) {
+            port_cfg = bridge->br_cfg->ports[i];
+            break;
+        }
+
+    }
+
+    if (!port_cfg) {
+        ds_put_format(&ctx->output, "port name not found\n");
+        return;
+    }
+
+    mac = ovsrec_mac_insert(ctx->txn);
+    ovsrec_mac_set_bridge(mac, bridge->br_cfg);
+    ovsrec_mac_set_vlan(mac, vid);
+    for (i = 0; i < bridge->br_cfg->n_vlans; i++) {
+        if (bridge->br_cfg->vlans[i]->id == vid) {
+            vlan_row = bridge->br_cfg->vlans[i];
+            break;
+        }
+    }
+    ovsrec_mac_set_mac_vlan(mac, vlan_row);
+    ovsrec_mac_set_mac_addr(mac, mac_addr);
+    ovsrec_mac_set_port(mac, port_cfg);
+    ovsrec_mac_set_from(mac, from);
+}
+
+static void
+cmd_del_mac(struct ctl_context *ctx)
+{
+    struct vsctl_context *vsctl_ctx = vsctl_context_cast(ctx);
+    int i, vid;
+    char *br_name = "bridge_normal";
+    char *mac_addr;
+    char *port_name;
+    char *from;
+    struct vsctl_bridge *bridge = NULL;
+    const struct ovsrec_port *port_cfg = NULL;
+    struct ovsrec_mac *mac_e = NULL;
+
+
+    mac_addr = ctx->argv[1];
+    vid = atoi(ctx->argv[2]);
+    port_name = ctx->argv[3];
+    from = ctx->argv[4];
+
+    vsctl_context_populate_cache(ctx);
+
+    bridge = find_bridge(vsctl_ctx, br_name, true);
+    if(!bridge) {
+       ds_put_format(&ctx->output, "no bridge\n");
+       return;
+    }
+
+    for (i=0; i < bridge->br_cfg->n_ports; i++) {
+        if (strcmp(port_name, bridge->br_cfg->ports[i]->name) == 0) {
+            port_cfg = bridge->br_cfg->ports[i];
+            break;
+        }
+
+    }
+
+    if (!port_cfg) {
+        ds_put_format(&ctx->output, "port name not found\n");
+        return;
+    }
+
+    OVSREC_MAC_FOR_EACH(mac_e, ctx->idl) {
+        if ((strcmp(mac_addr, mac_e->mac_addr) == 0) &&
+            (strcmp(from, mac_e->from) == 0) &&
+            (vid == mac_e->mac_vlan->id) &&
+            (mac_e->bridge == bridge->br_cfg) &&
+            (mac_e->port == port_cfg)) {
+            ovsrec_mac_delete(mac_e);
+            break;
+        }
+    }
+}
+
+static void
 pre_get_vrf_info(struct ctl_context *ctx)
 {
     ovsdb_idl_add_column(ctx->idl, &ovsrec_open_vswitch_col_vrfs);
@@ -3924,6 +4060,10 @@ static const struct ctl_command_syntax vsctl_commands[] = {
     {"del-vlan", 2, 2, "", pre_get_vlan_info, cmd_del_vlan, NULL, "--if-exists",
      RW},
 
+    /* MAC commands. */
+    {"add-mac", 4, 4, "", pre_get_mac_info, cmd_add_mac, NULL, "", RW},
+    {"del-mac", 4, 4, "", pre_get_mac_info, cmd_del_mac, NULL, "", RW},
+
     /* VRF commands */
     {"list-vrf", 0, 0, "", pre_get_vrf_info, cmd_list_vrf, NULL, "", RO},
     {"add-vrf", 1, 1, "", pre_get_vrf_info, cmd_add_vrf, NULL,
-- 
2.9.0

