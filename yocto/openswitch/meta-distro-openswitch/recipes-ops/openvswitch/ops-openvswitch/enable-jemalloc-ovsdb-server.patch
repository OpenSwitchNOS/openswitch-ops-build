From faecfad02afb7ee164890001bc56fc413d3e431f Mon Sep 17 00:00:00 2001
From: Esteban Rodriguez Betancourt <estebarb@hpe.com>
Date: Wed, 27 Jan 2016 11:53:45 -0600
Subject: [PATCH] new: dev: Add --enable-jemalloc argument to build

The OVS build system supports the enable-jemalloc flag to generate
the ovsdb-server binary using jemalloc. This flag, combined with
the change in the Yocto recipe, allows to switch the memory manager
used by the database running in the image.

Change-Id: Ia3bb8240ceb1fe46740a65924c8689a90d0d60bc
Signed-off-by: Esteban Rodriguez Betancourt <estebarb@hpe.com>
---
 DESIGN.md         | 84 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 INSTALL.md        |  4 +++
 configure.ac      | 14 ++++++++++
 ovsdb/automake.mk |  3 ++
 4 files changed, 105 insertions(+)

diff --git a/DESIGN.md b/DESIGN.md
index ff5bdf4..ad9d91c 100644
--- a/DESIGN.md
+++ b/DESIGN.md
@@ -941,6 +941,90 @@ against desired actions in a bytewise fashion:
 Please report other discrepancies, if you notice any, so that we can
 fix or document them.
 
+jemalloc as Default Memory Manager for OVSDB-Server
+===================================================
+
+Background
+----------
+
+OVSDB-Server performs a lot of memory-related operations. Many of those are related to
+allocating small pieces of memory. It requests and releases memory continually for creating
+and destroying objects like dynamic strings, json objects, etc.
+
+Tests revealed that by replacing the GLibC memory allocator with the [jemalloc]
+(http://www.canonware.com/jemalloc) memory allocator, OVSDB-Server's performance can be
+significantly improved, and also, in some cases, can reduce the memory usage.
+
+Implementation
+--------------
+
+The change is composed by several parts:
+- A yocto recipe for downloading, compiling and installing jemalloc 4.0.4 as part of the image.
+- A change to ops-openvswitch configuration flags, to add --enable-jemalloc as default.
+- A change to ops-openvswitch's configure.ac and automake.mk, to compile ovsdb-server
+  linked with jemalloc, when the --enable-jemalloc flag is passed during compile time.
+
+Notes for developers
+--------------------
+
+As of now, ovsdb-server is the only daemon linked with libjemalloc by default. It means the
+other daemons using the IDL library are still using the GLibC memory allocator.
+
+Changing to jemalloc is very easy. There are two options:
+1. Rebuild the daemon using the library (and changing the building instructions)
+2. Change how the daemon is loaded (systemd scripts).
+
+### Rebuild the daemon with jemalloc support
+
+In this case, libjemalloc must be compiled as a library. Change the automake, CMakeLists.txt
+or configure scripts in order to use the flag -ljemalloc. Your Yocto recipe must include
+jemalloc as a RDEPENDS and DEPENDS dependency.
+
+### Systemd script
+
+In this case, add the following line (under [Service]) to your script:
+
+    Environment="LD_PRELOAD=/lib/libjemalloc.so.2"
+
+The daemon's Yocto recipe also needs to specify jemalloc as a RDEPENDS dependency.
+
+## Performance Improvements
+
+Several tests (insertion, updates, pubsub and transaction size) were run in order to
+compare the GLibC performance and memory usage along both jemalloc and tcmalloc memory
+allocators.
+
+The results showed favorable results for jemalloc library.
+
+- Update 1: Each of 10 parallel workers do 25000 updates over 1000 rows.
+- Update 2: Each of 10 parallel workers do 25000 updates over 200000 rows.
+- Insert: Each of 10 parallel workers insert 25000 rows.
+- Message Queue Simulation: One producer waits for requests (requested by 10 parallel workers).
+  For each request the producer updates 512 rows, composed of one map column with 256 elements.
+- Transaction Size: The program inserts 100, 1000, 10000, 100000 and 500000 rows, alternating
+  between inserting all the rows in the same transaction, or inserting one row per transaction.
+
+| Test     |   GLibC   |  jemalloc  |  tcmalloc  |
+|----------|-----------|------------|------------|
+| Update 1 |   28s     |    24s     |    31s     |
+| Update 2 |   57s     |    38s     |    33s     |
+| Insert   |   38s     |    32s     |    27s     |
+| Queue    |    4s     |     4s     |     4s     |
+| Size     |  129.92s  |   119.87s  |   114.21s  |
+|            Duration (seconds)                  |
+
+
+| Test     |   GLibC   |  jemalloc  |  tcmalloc  |
+|----------|-----------|------------|------------|
+| Update 1 |    7.35   |    18.92   |   171.42   |
+| Update 2 | 1090.7    |    82.88   |   111.08   |
+| Insert   |   66.66   |    57.86   |   127.56   |
+| Queue    | 1094.40   |    28.13   |   270.47   |
+| Size     |  410.17   |   116.50   |   114.21   |
+|        Memory Usage (RSS, megabytes)           |
+
+The results show a consistent better results of jemalloc over GLibC memory allocator.
+TCMalloc was faster in some benchmarks, but uses a lot more of RAM than jemalloc.
 
 Suggestions
 ===========
diff --git a/INSTALL.md b/INSTALL.md
index 94c25f7..6b8b599 100644
--- a/INSTALL.md
+++ b/INSTALL.md
@@ -232,6 +232,10 @@ Here is an example:
       `% mkdir _gcc && (cd _gcc && ../configure CC=gcc)`  
       `% mkdir _clang && (cd _clang && ../configure CC=clang)`
 
+To use jemalloc as the memory allocator for OVSDB Server, add
+--enable-jemalloc, which links OVSDB Server with jemalloc (the library
+must be installed on the system). For the rationale about this flag
+refer to DESIGN.md.
 
 Building the Sources
 --------------------
diff --git a/configure.ac b/configure.ac
index f29a2fa..1c9f9b6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -43,6 +43,20 @@ AC_SYS_LARGEFILE
 LT_INIT([disable-shared])
 m4_pattern_forbid([LT_INIT]) dnl Make autoconf fail if libtool is missing.
 
+AC_ARG_ENABLE([jemalloc],
+    [AS_HELP_STRING([--enable-jemalloc], [use jemalloc as the memory manager
+    instead of GLibC] @@)],
+    [enable_jemalloc=${enableval}],
+    [enable_jemalloc=no])
+
+AS_IF([test "x$enable_jemalloc" != xno],
+    [
+    AC_SEARCH_LIBS([malloc], [jemalloc],
+        [AM_CONDITIONAL(USE_JEMALLOC, true)],
+        [AM_CONDITIONAL(USE_JEMALLOC, false)])
+    ],
+    [AM_CONDITIONAL(USE_JEMALLOC, false)])
+
 # The following explanation may help to understand the use of the
 # version number fields: current, revision, and age.
 #
diff --git a/ovsdb/automake.mk b/ovsdb/automake.mk
index 9d9dfa9..3ccc487 100644
--- a/ovsdb/automake.mk
+++ b/ovsdb/automake.mk
@@ -20,6 +20,9 @@ MAN_ROOTS += ovsdb/ovsdb-client.1.in
 sbin_PROGRAMS += ovsdb/ovsdb-server
 ovsdb_ovsdb_server_SOURCES = ovsdb/ovsdb-server.c
 ovsdb_ovsdb_server_LDADD = lib/libovscommon.la ovsdb/libovsdb.la
+if USE_JEMALLOC
+ovsdb_ovsdb_server_LDADD += -ljemalloc
+endif
 # ovsdb-server.1
 man_MANS += ovsdb/ovsdb-server.1
 DISTCLEANFILES += ovsdb/ovsdb-server.1
-- 
1.9.1

