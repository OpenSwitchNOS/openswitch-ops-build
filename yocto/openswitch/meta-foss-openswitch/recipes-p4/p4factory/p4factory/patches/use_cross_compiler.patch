diff --git a/makefiles/bin.mk b/makefiles/bin.mk
index c645333..8f95434 100644
--- a/makefiles/bin.mk
+++ b/makefiles/bin.mk
@@ -27,6 +27,6 @@ endif
 ${BINARY}_BINARY := ${BIN_DIR}/${BINARY}
 $($(BINARY)_BINARY) : $($(BINARY)_LINK_LIBS)
 	@echo "    Linking$(LINFO): $(notdir $@)"
-	$(VERBOSE)g++ $(DEBUG_FLAGS) $(COVERAGE_FLAGS) -o $@ -Wl,--start-group $+ -Wl,--end-group $(EXTRA_LINK_LIBS) $(LDFLAGS)
+	$(VERBOSE)$(CXX) $(DEBUG_FLAGS) $(COVERAGE_FLAGS) -o $@ -Wl,--start-group $+ -Wl,--end-group $(EXTRA_LINK_LIBS) $(LDFLAGS)
 
 CLEAN_DIRECTORIES := $(CLEAN_DIRECTORIES) $(BINARY)
diff --git a/makefiles/bm.mk b/makefiles/bm.mk
index 1d16cb2..7b2f504 100644
--- a/makefiles/bm.mk
+++ b/makefiles/bm.mk
@@ -106,7 +106,7 @@ SRC_FILES := $(notdir $(wildcard ${TARGET_ROOT}/*.c))
 OBJ_FILES := $(addprefix $(OBJ_DIR)/, $(SRC_FILES:%.c=%.o))
 $(OBJ_FILES) : $(OBJ_DIR)/%.o : %.c ${BM_TENJIN_TARGET}
 	@echo Compiling : $(notdir $@)
-	$(VERBOSE)gcc -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) -I $(PUBLIC_INC_PATH) $(GLOBAL_CFLAGS) $(MAIN_CFLAGS) -c $<
+	$(VERBOSE)$(CC) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) -I $(PUBLIC_INC_PATH) $(GLOBAL_CFLAGS) $(MAIN_CFLAGS) -c $<
 
 ifdef PLUGIN_LIBS
 BM_PLUGIN_LIBS := $(addprefix $(LIB_DIR)/, $(PLUGIN_LIBS))
diff --git a/makefiles/bmv2_common.mk b/makefiles/bmv2_common.mk
index 957cc52..088e886 100644
--- a/makefiles/bmv2_common.mk
+++ b/makefiles/bmv2_common.mk
@@ -18,7 +18,7 @@ GLOBAL_INCLUDES := $(addprefix -I, $(BMV2_PD_INC))
 
 $(BUILD_DIR)/main.o: $(TARGET_ROOT)/main.c bmv2-pd
 	@echo Compiling : $(notdir $@)
-	$(VERBOSE)gcc -o $@ $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -c $<
+	$(VERBOSE)$(CC) -o $@ $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -c $<
 
 PD_LIBS := -L$(BMV2_PD_LIB_DIR)/ -Wl,-rpath=$(BMV2_PD_LIB_DIR) -lpd -lpdfixed -lpdthrift -lpdfixedthrift
 
diff --git a/makefiles/module.mk b/makefiles/module.mk
index 6ff9cfe..6fa96bd 100644
--- a/makefiles/module.mk
+++ b/makefiles/module.mk
@@ -67,12 +67,12 @@ endif
 $(MODULE)_OBJS_C := $(addprefix $($(MODULE)_BUILD_OBJ_DIR)/, $(notdir $($(MODULE)_SOURCES_C:%.c=%.o)))
 $($(MODULE)_BUILD_OBJ_DIR)/%.o : $($(MODULE)_SRC_DIR)/%.c ${P4_PREREQ}
 	@echo "    Compiling : $(MODULE_INFO)::$(notdir $@)"
-	$(VERBOSE)gcc -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) $(MODULE_INCLUDES) -MD -c $<
+	$(VERBOSE)$(CC) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) $(MODULE_INCLUDES) -MD -c $<
 
 $(MODULE)_OBJS_CPP := $(addprefix $($(MODULE)_BUILD_OBJ_DIR)/, $(notdir $($(MODULE)_SOURCES_CPP:%.cpp=%.o)))
 $($(MODULE)_BUILD_OBJ_DIR)/%.o : $($(MODULE)_SRC_DIR)/%.cpp ${P4_PREREQ}
 	@echo "    Compiling : $(MODULE_INFO)::$(notdir $@)"
-	$(VERBOSE)g++ -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) $(MODULE_INCLUDES) -MD -std=c++11 -c $<
+	$(VERBOSE)$(CXX) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) $(MODULE_INCLUDES) -MD -std=c++11 -c $<
 
 # Include the auto-generated .d dependency files. gcc/g++ generate the .d file
 # when -MD option is used.
Submodule submodules/p4c-behavioral contains modified content
diff --git a/submodules/p4c-behavioral/p4c-bm.mk b/submodules/p4c-behavioral/p4c-bm.mk
index d664476..b7306ab 100644
--- a/submodules/p4c-behavioral/p4c-bm.mk
+++ b/submodules/p4c-behavioral/p4c-bm.mk
@@ -123,13 +123,13 @@ endif
 BM_OBJS_C := $(addsuffix .o, $(basename $(addprefix ${BM_OBJ_DIR}/, $(notdir ${BM_TENJIN_OUTPUT_C}))))
 ${BM_OBJS_C} : ${BM_OBJ_DIR}/%.o : ${BM_BUILD_DIR}/src/%.c ${BM_TENJIN_TARGET}
 	@echo "    Compiling : bm::$(notdir $<)"
-	$(VERBOSE)gcc -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -I $(PUBLIC_INC_PATH) -MD -c $<
+	$(VERBOSE)$(CC) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -I $(PUBLIC_INC_PATH) -MD -c $<
 
 BM_OBJS_CPP := $(addsuffix .o, $(basename $(addprefix ${BM_OBJ_DIR}/, $(notdir ${BM_TENJIN_OUTPUT_CPP}))))
 BM_OBJS_CPP += $(addsuffix .o, $(basename $(addprefix ${BM_OBJ_DIR}/, $(notdir ${BM_THRIFT_OUTPUT_CPP}))))
 ${BM_OBJS_CPP} : ${BM_OBJ_DIR}/%.o : ${BM_BUILD_SRC_DIR}/%.cpp ${BM_TENJIN_TARGET} ${BM_BUILD_SRC_DIR}/${P4_PREFIX}.cpp
 	@echo "    Compiling : bm::$(notdir $<)"
-	$(VERBOSE)g++ -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) -I ${PUBLIC_INC_PATH} -MD -c $<
+	$(VERBOSE)$(CXX) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) -I ${PUBLIC_INC_PATH} -MD -c $<
 
 # Include the auto-generated .d dependency files. gcc/g++ generate the .d file
 # when -MD option is used.
diff --git a/submodules/p4c-behavioral/p4c_bm/plugin/openflow-plugin.mk b/submodules/p4c-behavioral/p4c_bm/plugin/openflow-plugin.mk
index 46e7586..3db6c7c 100644
--- a/submodules/p4c-behavioral/p4c_bm/plugin/openflow-plugin.mk
+++ b/submodules/p4c-behavioral/p4c_bm/plugin/openflow-plugin.mk
@@ -14,7 +14,7 @@ GLOBAL_CFLAGS += -I $(SUBMODULE_P4OFAGENT)/submodules/indigo/submodules/infra/mo
 
 ${BM_OF_OBJS_C} : ${BM_OBJ_DIR}/%.o : ${BM_OF_PLUGIN_SRC_DIR}/%.c
 	@echo "    Compiling : openflow::$(notdir $<)"
-	$(VERBOSE)gcc -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -I $(PUBLIC_INC_PATH) -MD -c $<
+	$(VERBOSE)$(CC) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -I $(PUBLIC_INC_PATH) -MD -c $<
 
 # plugin target
 PLUGIN_LIBS += plugin-openflow.a
diff --git a/submodules/p4c-behavioral/p4c_bm/plugin/sai-plugin.mk b/submodules/p4c-behavioral/p4c_bm/plugin/sai-plugin.mk
index 03d4313..715a3ce 100644
--- a/submodules/p4c-behavioral/p4c_bm/plugin/sai-plugin.mk
+++ b/submodules/p4c-behavioral/p4c_bm/plugin/sai-plugin.mk
@@ -21,7 +21,7 @@ BM_TENJIN_OUTPUT_SAI_C := $(addprefix ${BM_BUILD_PLUGIN_SRC_DIR}/, $(notdir ${BM
 BM_SAI_OBJS_C := $(addsuffix .o, $(basename $(addprefix ${BM_OBJ_DIR}/, $(notdir ${BM_TENJIN_OUTPUT_SAI_C}))))
 ${BM_SAI_OBJS_C} : ${BM_OBJ_DIR}/%.o : ${BM_BUILD_PLUGIN_SRC_DIR}/%.c ${BM_TEMPLATES_SAI}
 	@echo "    Compiling : sai::$(notdir $<)"
-	$(VERBOSE)gcc -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -I $(PUBLIC_INC_PATH) -MD -c $<
+	$(VERBOSE)$(CC) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) $(GLOBAL_CFLAGS) -I $(PUBLIC_INC_PATH) -MD -c $<
 
 
 BM_TEMPLATES_SAI_CPP := $(addprefix ${BM_BUILD_PLUGIN_SRC_DIR}/, p4_sai_rpc_constants.cpp p4_sai_rpc_types.cpp p4_sai_rpc_server.cpp sai_p4_sai.cpp)
@@ -30,7 +30,7 @@ BM_SAI_OBJS_CPP := $(addsuffix .o, $(basename $(addprefix ${BM_OBJ_DIR}/, $(notd
 
 ${BM_SAI_OBJS_CPP} : ${BM_OBJ_DIR}/%.o : ${BM_BUILD_PLUGIN_SRC_DIR}/%.cpp ${BM_TEMPLATES_SAI}
 	@echo "    Compiling : sai::$(notdir $<)"
-	$(VERBOSE)g++ -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) -I ${PUBLIC_INC_PATH} -MD -c $<
+	$(VERBOSE)$(CXX) -o $@ $(COVERAGE_FLAGS) $(DEBUG_FLAGS) $(GLOBAL_INCLUDES) -I ${PUBLIC_INC_PATH} -MD -c $<
 
 # plugin target
 $(LIB_DIR)/plugin-sai.a: ${BM_PLUGIN_THRIFT_OUTPUT_CPP} ${BM_BUILD_PLUGIN_SRC_DIR}/p4_sai_rpc_types.h ${BM_SAI_OBJS_C} ${BM_SAI_OBJS_CPP} 
