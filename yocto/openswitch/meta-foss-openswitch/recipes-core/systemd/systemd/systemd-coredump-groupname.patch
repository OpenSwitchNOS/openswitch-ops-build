Index: systemd/src/coredump/coredump.c
===================================================================
--- systemd.orig/src/coredump/coredump.c	2016-05-06 15:21:25.960582375 -0600
+++ systemd/src/coredump/coredump.c	2016-05-06 15:21:35.809503899 -0600
@@ -22,6 +22,7 @@
 #include <sys/prctl.h>
 #include <sys/xattr.h>
 #include <unistd.h>
+#include <grp.h>
 
 #ifdef HAVE_ELFUTILS
 #include <dwarf.h>
@@ -109,6 +110,7 @@
 
 static CoredumpStorage arg_storage = COREDUMP_STORAGE_EXTERNAL;
 static bool arg_compress = true;
+static char* arg_group = NULL;
 static uint64_t arg_process_size_max = PROCESS_SIZE_MAX;
 static uint64_t arg_external_size_max = EXTERNAL_SIZE_MAX;
 static size_t arg_journal_size_max = JOURNAL_SIZE_MAX;
@@ -124,6 +126,7 @@
                 { "Coredump", "JournalSizeMax",   config_parse_iec_size,          0, &arg_journal_size_max  },
                 { "Coredump", "KeepFree",         config_parse_iec_uint64,        0, &arg_keep_free         },
                 { "Coredump", "MaxUse",           config_parse_iec_uint64,        0, &arg_max_use           },
+                { "Coredump", "GroupName",        config_parse_string,            0, &arg_group             },
                 {}
         };
 
@@ -219,6 +222,7 @@
                 const char *context[_CONTEXT_MAX],
                 uid_t uid) {
 
+        struct group* grpdata;
         assert(fd >= 0);
         assert(filename);
         assert(target);
@@ -229,6 +233,16 @@
         (void) fix_acl(fd, uid);
         (void) fix_xattr(fd, context);
 
+        if(arg_group != NULL)
+        {
+            /* Convert group name into group id */
+            grpdata = getgrnam(arg_group);
+            if(grpdata!= NULL)
+            {
+                fchown(fd,-1,grpdata->gr_gid);
+            }
+        }
+
         if (fsync(fd) < 0)
                 return log_error_errno(errno, "Failed to sync coredump %s: %m", filename);
 
