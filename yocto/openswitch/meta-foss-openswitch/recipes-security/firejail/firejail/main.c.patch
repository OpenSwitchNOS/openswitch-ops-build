--- firejail-0.9.38.orig/src/firejail/main.c	2016-02-05 04:52:41.000000000 -0800
+++ firejail-0.9.38/src/firejail/main.c	2016-04-11 17:33:13.034048947 -0700
@@ -35,6 +35,7 @@
 #include <signal.h>
 #include <time.h>
 #include <net/if.h>
+#include <grp.h>
 
 #if 0
 #include <sys/times.h>
@@ -68,6 +69,14 @@
 int arg_caps_keep = 0;			// keep list
 char *arg_caps_list = NULL;			// optional caps list
 
+int arg_users_keep_all = 0;
+int arg_users_keep = 0;
+ug_list_t arg_users_list;
+
+int arg_groups_keep_all = 0;
+int arg_groups_keep = 0;
+ug_list_t arg_groups_list;
+
 int arg_trace = 0;				// syscall tracing support
 int arg_tracelog = 0;				// blacklist tracing support
 int arg_rlimit_nofile = 0;			// rlimit nofile
@@ -450,6 +459,68 @@
 
 }
 
+void parse_ug_list(char* ug_keep_list, ug_list_t* ug_keep, int group_or_user)
+{
+    int i = 0;
+    int tmp = 0;
+    int count = 0;
+    char* token = NULL;
+
+    if (ug_keep_list == NULL || ug_keep == NULL) 
+    {
+        return;
+    }
+
+    tmp = strlen(ug_keep_list);
+    for (i = 0; i < tmp; i++) 
+    {
+        if (ug_keep_list[i] == ',') 
+        {
+            count++;
+        }
+    }
+
+    ug_keep->ug_id_list = malloc(sizeof(uint32_t) * (count + 1));
+
+    i = 0;
+    token = strtok(ug_keep_list, ",");
+    while (token != NULL) 
+    {
+        uint32_t id = 0;
+        
+        if(group_or_user == 1)
+        {
+            struct group* grp = getgrnam(token);
+            if(grp != NULL)
+            {
+                id = grp->gr_gid;
+            }
+        }
+        else
+        {
+            struct passwd* usr = getpwnam(token);
+            if(usr != NULL)
+            {
+                id = usr->pw_uid;
+            }
+        }
+        
+        if(id != 0)
+        {
+            ug_keep->ug_id_list[i] = id;
+            ++i;
+        }
+        else
+        {
+            printf("Username or group not found, ignoring %s\n", token);
+        }
+
+        token = strtok(NULL, ",");
+    }
+
+    ug_keep->size = i;
+}
+
 //*******************************************
 // Main program
 //*******************************************
@@ -466,6 +537,9 @@
 	int highest_errno = errno_highest_nr();
 #endif
 
+        arg_users_list.ug_id_list = NULL;
+        arg_groups_list.ug_id_list = NULL;
+        
 	// check argv[0] symlink wrapper if this is not a login shell
 	if (*argv[0] != '-')
 		run_symlink(argc, argv);
@@ -690,6 +764,29 @@
 				errExit("strdup");
 			set_cgroup(cfg.cgroup);
 		}
+                
+		else if (strcmp(argv[i], "--users.keep=all") == 0)
+			arg_users_keep_all = 1;
+		else if (strncmp(argv[i], "--users.keep=", 13) == 0) {
+			arg_users_keep = 1;
+			char* tmp_users_list = strdup(argv[i] + 13);
+			if (!tmp_users_list)
+				errExit("strdup");
+                        
+			parse_ug_list(tmp_users_list, &arg_users_list, 0);
+                        free(tmp_users_list);
+		}
+		else if (strcmp(argv[i], "--groups.keep=all") == 0)
+			arg_groups_keep_all = 1;
+		else if (strncmp(argv[i], "--groups.keep=", 14) == 0) {
+			arg_groups_keep = 1;
+			char* tmp_groups_list = strdup(argv[i] + 14);
+			if (!tmp_groups_list)
+				errExit("strdup");
+                        
+			parse_ug_list(tmp_groups_list, &arg_groups_list, 1);
+                        free(tmp_groups_list);
+		}
 		
 		//*************************************
 		// filesystem
@@ -1582,6 +1679,16 @@
 		free(cfg.seccomp_list_errno);
 	}
 #endif
+        
+        if(arg_users_list.ug_id_list != NULL)
+        {
+            free(arg_users_list.ug_id_list);
+        }
+        
+        if(arg_groups_list.ug_id_list != NULL)
+        {
+            free(arg_groups_list.ug_id_list);
+        }
 
 	myexit(0);
 
